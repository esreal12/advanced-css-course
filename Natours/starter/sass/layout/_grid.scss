.row {
    //  The max-width CSS property sets the maximum width of an element. 
    //  It prevents the used value of the width property from becoming 
    //  larger than the value specified by max-width.
    max-width: $grid-width;
    margin: 0 auto;
    
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;
    // ^ means that is going to take in count only the beginning of the class attribute.
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
            
            @include respond(tab-port) {
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    // Calc() let us mix units.
    // #{} let us add sass variables inside Calc() function.
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
    }
    // 2 times a single col-1-of-3 plus $gutter-horizontal
    .col-2-of-3 {
        width: calc(2 * ((100% - (2 * #{$gutter-horizontal})) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
    }
    // 2 times a single col-1-of-4 plus $gutter-horizontal
    .col-2-of-4 {
        width: calc(2 * ((100% - (3 * #{$gutter-horizontal})) / 4) + #{$gutter-horizontal});
    }
    // 3 times a single col-1-of-4 plus 2 times $gutter-horizontal
    .col-3-of-4 {
        width: calc(3 * ((100% - (3 * #{$gutter-horizontal})) / 4) + (2 * #{$gutter-horizontal}));
    }

}